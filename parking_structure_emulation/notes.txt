                 A Parking Structure Access Emulation

1. The Model

 1.1  The Basic Function of a Parking Structure 

      The basic function of a parking facility is to provide temporary parking space
      for vehicle drivers.

      To serve the basic function, a parking structure holds a fixed  parking capacity 
      and provide markings to assist drivers in locate their vehicles upon leaving.

 1.2 Other functions
     update vacancy status, collect parking fee, accouting.

2. Main Aspects to Consider in Emulation
  2.1  Concurrency
    The traffic at a parking structure is ad-hoc. A vehicle may arrive at any time during
    open hours and independent of other vehicles.
   
    To reflect this nature, it makes sense to apply multithreading rather a single thread.

  2.2 Arbitrage in Grant of exclusive usage
   The convention in determining usage right in scenarios when several vechicles compete for
   a spot is to grant it to the vehcile closest to the spot in the right direction.

   In programming, the right to a spot can be protected with an exclusive lock.
   
3. Entities Description
  3.1 Parking Structure
     A singleton class object, comprised a collection of demarcated parking spots. 
     
     It assumes administrative functions as follow:    
         I. post availability and vacancy status
            When closed, no vehicle will be admitted other than exiting.
        II. issue time-stamped tickets to vehicles entering the premise 
       III. track parking spot assignment specifics
       III. collect fees and keep accounting 

    The parking structure owns a thread, and maintains an event queue and an 
    event dispatcher. 

  3.2 Parking spots 
     Each maintains one of  states: occupited or vacant, whose access is protected by an 
     exclusive mutex.
     
     A spot is monitored by a video sensor which emits signals/events to Parking structure
     when occupied or vacated. 

  3.3 Vehicles  
     A vechicle is a free moving agent and pays to park.
     In emulation, a vehicle is associated with a dedicated thread.



